name: PR testing action

on:
  pull_request:
    types:
      - opened
      - reopened

jobs:
  test-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Install hub
        run: |
          HUB_ARCH="amd64"
          HUB_VER=$(curl -sL "https://api.github.com/repos/github/hub/releases/latest" |\
            jq -r .tag_name | sed 's/^v//')
          curl -sL \
            "https://github.com/github/hub/releases/download/v${HUB_VER}/hub-linux-${HUB_ARCH}-${HUB_VER}.tgz" |\
          tar xz --strip-components=2 --wildcards '*/bin/hub' && \
          sudo install hub /usr/local/bin

      - name: Install hub extension script
        run: |
          # Clone into a temporary directory to avoid overwriting
          # any existing github directory.
          pushd $(mktemp -d) &>/dev/null
          git clone --single-branch --depth 1 "https://github.com/jamesodhunt-org/.github" && cd .github/scripts
          sudo install kata-hub.sh /usr/local/bin
          popd &>/dev/null

      - name: Checkout code to allow hub to communicate with the project
        uses: actions/checkout@v2

      - name: Show environment
        env:
          DEBUG: true
          HUB_VERBOSE: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # FIXME: DEBUG:
          echo "::debug::GITHUB_WORKSPACE"
          echo "$GITHUB_WORKSPACE"

          echo "::debug::env"
          set|sort || true

          # FIXME: DEBUG:
          echo "::debug::PWD"
          pwd
          ls -al

          # FIXME: DEBUG:
          echo "::debug::PATH: $PATH"
          echo $PATH

          echo "::debug::PATH: hub config"
          egrep "(user|protocol):" ~/.config/hub || true

          echo "::debug::PATH: hub oath token length"
          grep oauth_token: ~/.config/hub|awk '{print $2}'|wc -c

          export PATH="/usr/local/bin:$PATH"

          # FIXME: DEBUG:
          echo "::debug::hub"
          command -v hub || true

          # FIXME: DEBUG:
          echo "::debug::hub api user"
          /usr/local/bin/hub api user || true

          # FIXME: DEBUG:
          echo "::debug::hub issues"
          /usr/local/bin/hub issue || true

          # FIXME: DEBUG:
          echo "::debug::hub PRs"
          /usr/local/bin/hub pr list || true

          # FIXME: DEBUG:
          echo "::debug::git details"
          git ls-files -v || true
          git branch || true
          git remote -v || true
          git status || true

          # FIXME: DEBUG:
          echo "::debug::/usr/local/bin:"
          sudo ls -l /usr/local/bin || true

          # FIXME: DEBUG:
          echo "::debug::linked PRs"
          hub api -XGET search/issues -f 'q=repo:jamesodhunt-org/wibble is:issue is:open linked:pr' || true

          # FIXME: DEBUG:
          echo "::debug::linked issues"
          hub api -XGET search/issues -f 'q=repo:jamesodhunt-org/wibble is:pr is:open linked:issue' || true

          # FIXME: DEBUG:
          echo "::debug::issues"
          hub issue || true
